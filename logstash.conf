input {
  jdbc { 
    jdbc_connection_string => "jdbc:mysql://localhost/grottoce"
    # The user we wish to execute our statement as
    jdbc_user => "root"
    jdbc_password => "root"
    # The path to our downloaded jdbc driver
    jdbc_driver_library => "/usr/share/java/mysql.jar"
    jdbc_driver_class => "com.mysql.jdbc.Driver"
    # our query
    statement => "
      SELECT 
        entry.*, 
        GROUP_CONCAT(description.Title) as 'descriptions.titles', 
        GROUP_CONCAT(description.Body) as 'descriptions.bodies'
      FROM t_entry entry
      JOIN j_entry_description jed ON jed.id_entry = entry.id
      JOIN t_description description ON description.id = jed.id_description
      GROUP BY entry.id
    "
    # Launch query every monday at 3:00 (night)
    # schedule => "0 3 * * mon"
    type => "entry"
  }

  jdbc { 
    jdbc_connection_string => "jdbc:mysql://localhost/grottoce"
    # The user we wish to execute our statement as
    jdbc_user => "root"
    jdbc_password => "root"
    # The path to our downloaded jdbc driver
    jdbc_driver_library => "/usr/share/java/mysql.jar"
    jdbc_driver_class => "com.mysql.jdbc.Driver"
    # our query
    statement => "SELECT * FROM t_cave"
    # Launch query every monday at 3:00 (night)
    # schedule => "0 3 * * mon"
    type => "cave"
  }

  jdbc { 
    jdbc_connection_string => "jdbc:mysql://localhost/grottoce"
    # The user we wish to execute our statement as
    jdbc_user => "root"
    jdbc_password => "root"
    # The path to our downloaded jdbc driver
    jdbc_driver_library => "/usr/share/java/mysql.jar"
    jdbc_driver_class => "com.mysql.jdbc.Driver"
    # our query
    statement => "
      SELECT 
        grotto.*, 
        GROUP_CONCAT(caver.Nickname) as 'members.nicknames'
      FROM t_grotto grotto
      JOIN j_grotto_caver jgc ON jgc.id_grotto = grotto.id
      JOIN t_caver caver ON caver.id = jgc.id_caver
      GROUP BY grotto.id
    "
    # Launch query every monday at 3:00 (night)
    # schedule => "0 3 * * mon"
    type => "grotto"
  }
}
output {
  # debugging purpose
  # stdout { codec => json_lines }
  if [type] == "entry" {
    elasticsearch {
      hosts => "localhost:9200"
      index => "entries-index"
      document_type => "data"
      action => "update"
      document_id => "%{id}"
      doc_as_upsert => true
    }
  }

  if [type] == "cave" {
    elasticsearch {
      hosts => "localhost:9200"
      index => "caves-index"
      document_type => "data"
      action => "update"
      document_id => "%{id}"
      doc_as_upsert => true
    }
  }

  if [type] == "grotto" {
    elasticsearch {
      hosts => "localhost:9200"
      index => "grottos-index"
      document_type => "data"
      action => "update"
      document_id => "%{id}"
      doc_as_upsert => true
    }
  }
}