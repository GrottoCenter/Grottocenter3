swagger: '2.0'
info:
  description: 'This page documents the available API you can use on your website.'
  title: 'Grottocenter 3 - REST API'
  version: 'v.1'
  termsOfService: 'https://wiki.grottocenter.org/wiki/GrottoCenter:En/API'
  contact:
    name: 'Slack space'
    url: 'https://grottocenter.slack.com/messages/C858CHARY/'
  license:
    name: 'CC BY-SA 3.0'
    url: 'https://creativecommons.org/licenses/by-sa/3.0/'
host: beta.grottocenter.org
basePath: /api/v1
tags:
  - name: entry
    description: Entries managment
  - name: search
    description: Everything around search
schemes:
  - https
paths:
  '/entry/{entryId}':
    get:
      tags:
        - entry
      summary: Get public entries by identifier
      description: Get public entries by identifier
      operationId: findEntryById
      produces:
        - application/json
      parameters:
        - name: entryId
          in: path
          description: Entry identifier
          required: true
          type: string
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
            items:
              $ref: '#/definitions/PublicEntry'
        '404':
          description: Resource not found
        '500':
          description: Internal error
  /entry/publicCount:
    get:
      tags:
        - entry
      summary: Get the number of public entries
      description: Get the number of public entries referenced in GC3 database
      operationId: getEntryPublicCount
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
            items:
              $ref: '#/definitions/Entry'
        '500':
          description: Internal error
  /search/findAll:
    get:
      tags:
        - search
      summary: Search for entries
      description: Search by name entries referenced in GC3 database
      operationId: findByName
      produces:
        - application/json
      parameters:
        - name: name
          in: query
          description: Resource name to filter by
          required: true
          type: string
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
            items:
              $ref: '#/definitions/SearchResult'
        '404':
          description: Resource not found
        '500':
          description: Internal error
definitions:
  PublicEntry:
    type: object
    properties:
      count:
        type: integer
        format: int64
  Entry:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      country:
        type: string
      county:
        type: string
      region:
        type: string
      city:
        type: string
      postalCode:
        type: string
      latitude:
        type: string
      longitude:
        type: string
      altitude:
        type: string
  SearchResult:
    properties:
      entries:
        type: array
        items:
          $ref: "#/definitions/Entry"
